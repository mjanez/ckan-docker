name: Build and push ckan-docker image from PR Merge

on:
  pull_request:
    types:
      - closed
    branches:
      - master
      - 'ckan-*.*.*'
      - '!dev/ckan-*.*.*'
      - '!feature/*'
      - '!fix/*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTEXT: .
  BRANCH: ${{ github.head_ref }}
  VERSION: ${{ github.head_ref }}
  DOCKERFILE_PATH: /ckan
  DOCKERFILE: Dockerfile

jobs:
  docker:
    name: runner/build-docker-push:${{ github.head_ref }}
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Check out code
        uses: actions/checkout@v4

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repo name to lowercase
        id: github_repo_lowercase
        run: INPUT=${{ env.IMAGE_NAME }}; echo "IMAGE_LOWERCASE=${INPUT,,}">>${GITHUB_OUTPUT}

      - name: Extract tag version from branch name
        id: extract_tag_version
        run: |
          if [ "${{ env.BRANCH }}" = "master" ]; then
            echo "VERSION=master" >> $GITHUB_ENV
          else
            echo "VERSION=$(echo ${{ env.BRANCH }} | sed 's/^ckan-//')" >> $GITHUB_ENV
          fi

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.github_repo_lowercase.outputs.IMAGE_LOWERCASE }}
          labels: |
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}/blob/${{ env.BRANCH }}/README.md
            org.opencontainers.image.version=${{ env.VERSION }}
          annotations: |
            org.opencontainers.image.description=This image contains CKAN based on a Docker Compose deployment. The container includes CKAN along with its dependencies and configurations for spatial data support.
            org.opencontainers.image.source=https://github.com/${{ github.repository }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ steps.github_repo_lowercase.outputs.IMAGE_LOWERCASE }}:${{ env.VERSION }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          context: ${{ env.CONTEXT }}${{ env.DOCKERFILE_PATH }}
          file: ${{ env.CONTEXT }}${{ env.DOCKERFILE_PATH }}/${{ env.DOCKERFILE }}

      - name: Linting Dockerfile with hadolint in GH Actions
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ env.CONTEXT }}${{ env.DOCKERFILE_PATH }}/${{ env.DOCKERFILE }}
          no-fail: true

      - name: Run Trivy container image vulnerability scanner
        uses: aquasecurity/trivy-action@0.28.0
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ${{ env.REGISTRY }}/${{ steps.github_repo_lowercase.outputs.IMAGE_LOWERCASE }}:${{ env.VERSION }}
          format: sarif
          output: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif